[project]
name = "bio-mcp"
version = "0.1.0"
description = "Biomedical MCP server providing PubMed search, RAG, and corpus management tools"
requires-python = ">=3.12"
dependencies = [
    "mcp>=1.0.0",
    "weaviate-client>=4.0.0",
    "openai>=1.0.0",
    "tiktoken>=0.5.0",
    "biopython>=1.80",
    "xmltodict>=0.13.0",
    "sqlalchemy>=2.0.0",
    "asyncpg>=0.29.0",
    "aiosqlite>=0.19.0",
    "greenlet>=3.0.0",
    "alembic>=1.13.0",
    "psycopg2-binary>=2.9.0",
    "httpx>=0.27.0",
    "pydantic>=2.0.0",
    "python-dotenv>=1.0.0",
    "typer>=0.12.0",
    "rich>=13.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-alembic>=0.11.0",
    "testcontainers>=4.8.0",
    "ruff>=0.5.0",
    "mypy>=1.10.0",
    "pre-commit>=3.7.0",
]

[project.scripts]
bio-mcp = "bio_mcp.main:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build]
packages = ["src/bio_mcp"]

[tool.ruff]
line-length = 88
target-version = "py312"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "UP", "RUF"]
ignore = ["E501"]


[tool.mypy]
python_version = "3.12"
strict = false
check_untyped_defs = false
disallow_untyped_defs = false
warn_return_any = false
warn_unused_configs = true
ignore_missing_imports = true
# Focus on our Phase 4B implementation - just the resource file which is cleanest
files = [
    "src/bio_mcp/mcp/resources.py",
]

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]

[dependency-groups]
dev = [
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "testcontainers>=4.8.0",
    "ruff>=0.12.9",
    "mypy>=1.17.1",
    "pytest-alembic>=0.12.1",
]
